// COLOR VARIABLES
$color-primary: #c69963;
$color-primary-dark: #b28451;

$color-secondary: #101d2c;

$color-grey-light-1: #f9f7f6;
$color-grey-light-2: #aaa;

$color-grey-dark-1: #54483a;
$color-grey-dark-2: #6d5d4b;

// FONT VARIABLES
$font-primary: "Nunito", sans-serif;
$font-display: "Josefin Sans", sans-serif;

// Description:: Media queries break points.

$bp-largest: 75em; // 1200px
$bp-large: 62.5em; // 1000px
$bp-medium: 50em; // 800px
$bp-small: 37.5em; // 800px

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  font-size: 62.5%;

  @media only screen and (max-width: $bp-largest) {
    font-size: 50%;
  }
}

body {
  font-family: $font-primary;
  color: $color-grey-dark-2;
  font-weight: 300;
  line-height: 1.6;
}

.container {
  display: grid;
  // margin: 0 auto;
  grid-template-rows: 80vh min-content 40vw repeat(3, min-content);

  // it could be auto instead of min-content so it adapts to the content. Min-content merely allows for the height of the abject to be readjusted as teh vw changes.
  // The VW is used to make the row responsive to the design.

  grid-template-columns:
    [sidebar-start] 8rem [sidebar-end full-start] minmax(6rem, 1fr)
    [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end])
    [center-end]
    minmax(6rem, 1fr) [full-end];

  // we did not use 1fr because we wanted the columns to have fixed width
  // the second column and the last column 1fr are used to center the other 8 columns while also keeping the sidebar in the center. // minmax(6rem, 1fr) - The centering 2 coulmn will have a min width of 60px.

  // justify-content: center;
  // & > * {
  //   font-size: 40px;
  //   padding: 40px;
  // }

  @media only screen and (max-width: $bp-large) {
    grid-template-rows: 6rem 80vh min-content 40vw repeat(3, min-content);
    grid-template-columns:
      [ full-start] minmax(6rem, 1fr)
      [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end])
      [center-end]
      minmax(6rem, 1fr) [full-end];
  }

  @media only screen and (max-width: $bp-medium) {
    grid-template-rows: 6rem calc(100vh - 6rem) min-content min-content min-content repeat(
        3,
        min-content
      );
    // we can actually get rid of the the min-content becasue the automatic placement algo will take care of it. i.e. hte size will be based on the content.
  }
}
